{"ast":null,"code":"import _slicedToArray from \"/home/angelito/Devs/appolus-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/angelito/Devs/appolus-master/src/components/Dashboard/users/listDefaultUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ListUsers from './Users';\nimport Pagination from './Pagination';\n\nconst ListDefaulUsers = props => {\n  // ===============================================================\n  // Hooks useState\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(3),\n        _useState8 = _slicedToArray(_useState7, 2),\n        usersPerPage = _useState8[0],\n        setTotalUsersPerPage = _useState8[1]; // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setLoading(true);\n      const res = await axios.get('/api/users/list');\n      setUsers(res.data.users);\n      setLoading(false);\n    };\n\n    fetchUsers();\n  }, []); // Get current users\n\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber); // Increase users per page\n\n\n  const increaseUsersPerPage = e => setTotalUsersPerPage(e.target.value); // Increase users per page in search\n\n\n  const increaseUsersPerPageInSearch = num => setTotalUsersPerPage(num);\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid\",\n    id: \"kt_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(ListUsers, {\n    users: currentUsers,\n    loading: loading,\n    increaseUsersPerPageInSearch: increaseUsersPerPageInSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    usersPerPage: usersPerPage,\n    increaseUsersPerPage: increaseUsersPerPage,\n    totalUsers: users.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  const search = state.search;\n  return {\n    search\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(ListDefaulUsers));","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/components/Dashboard/users/listDefaultUsers.js"],"names":["React","useState","useEffect","axios","connect","injectIntl","IntlMessages","ListUsers","Pagination","ListDefaulUsers","props","users","setUsers","loading","setLoading","currentPage","setCurrentPage","usersPerPage","setTotalUsersPerPage","fetchUsers","res","get","data","indexOfLastUser","indexOfFirstUser","currentUsers","slice","paginate","pageNumber","increaseUsersPerPage","e","target","value","increaseUsersPerPageInSearch","num","length","mapStateToProps","state","search"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAGjC;AACA;AAJiC,oBAMPT,QAAQ,CAAC,EAAD,CAND;AAAA;AAAA,QAM1BU,KAN0B;AAAA,QAMnBC,QANmB;;AAAA,qBAOHX,QAAQ,CAAC,KAAD,CAPL;AAAA;AAAA,QAO1BY,OAP0B;AAAA,QAOjBC,UAPiB;;AAAA,qBAQKb,QAAQ,CAAC,CAAD,CARb;AAAA;AAAA,QAQ1Bc,WAR0B;AAAA,QAQbC,cARa;;AAAA,qBASYf,QAAQ,CAAC,CAAD,CATpB;AAAA;AAAA,QAS1BgB,YAT0B;AAAA,QASZC,oBATY,kBAWjC;AACA;AACA;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,UAAU,GAAG,YAAY;AAC7BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,iBAAV,CAAlB;AACAT,MAAAA,QAAQ,CAACQ,GAAG,CAACE,IAAJ,CAASX,KAAV,CAAR;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAOAK,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT,CAdiC,CAyBjC;;AACA,QAAMI,eAAe,GAAGR,WAAW,GAAGE,YAAtC;AACA,QAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAA3C;AACA,QAAMQ,YAAY,GAAGd,KAAK,CAACe,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB,CA5BiC,CA8BjC;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIZ,cAAc,CAACY,UAAD,CAA7C,CA/BiC,CAiCjC;;;AACA,QAAMC,oBAAoB,GAAGC,CAAC,IAAIZ,oBAAoB,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtD,CAlCiC,CAoCjC;;;AACA,QAAMC,4BAA4B,GAAGC,GAAG,IAAIhB,oBAAoB,CAACgB,GAAD,CAAhE;;AAEA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAoD,IAAA,EAAE,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAET,YAAlB;AAAgC,IAAA,OAAO,EAAEZ,OAAzC;AAAkD,IAAA,4BAA4B,EAAEoB,4BAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAEhB,YADhB;AAEE,IAAA,oBAAoB,EAAEY,oBAFxB;AAGE,IAAA,UAAU,EAAElB,KAAK,CAACwB,MAHpB;AAIE,IAAA,QAAQ,EAAER,QAJZ;AAKE,IAAA,WAAW,EAAEZ,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAcD,CArDD;;AAuDA,MAAMqB,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAelC,OAAO,CACpBgC,eADoB,CAAP,CAEb/B,UAAU,CAACI,eAAD,CAFG,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from \"react-redux\";\nimport { injectIntl } from 'react-intl'\nimport IntlMessages from '../../../util/IntlMessages'\n\nimport ListUsers from './Users'\nimport Pagination from './Pagination'\n\nconst ListDefaulUsers = (props) => {\n\n\n  // ===============================================================\n  // Hooks useState\n  // ===============================================================\n  const [users, setUsers] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [usersPerPage, setTotalUsersPerPage] = useState(3);\n\n  // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setLoading(true)\n      const res = await axios.get('/api/users/list')\n      setUsers(res.data.users)\n      setLoading(false)\n    };\n\n    fetchUsers()\n  }, [])\n\n  // Get current users\n  const indexOfLastUser = currentPage * usersPerPage\n  const indexOfFirstUser = indexOfLastUser - usersPerPage\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser)\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  // Increase users per page\n  const increaseUsersPerPage = e => setTotalUsersPerPage(e.target.value)\n\n  // Increase users per page in search\n  const increaseUsersPerPageInSearch = num => setTotalUsersPerPage(num)\n\n  return (\n    <>\n      <div className=\"kt-grid__item kt-grid__item--fluid\" id=\"kt_content\">\n        <ListUsers users={currentUsers} loading={loading} increaseUsersPerPageInSearch={increaseUsersPerPageInSearch} />\n        <Pagination\n          usersPerPage={usersPerPage}\n          increaseUsersPerPage={increaseUsersPerPage}\n          totalUsers={users.length}\n          paginate={paginate}\n          currentPage={currentPage}\n        />\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = state => {\n  const search = state.search\n  return { search }\n}\n\nexport default connect(\n  mapStateToProps,\n)(injectIntl(ListDefaulUsers))\n"]},"metadata":{},"sourceType":"module"}