{"ast":null,"code":"import _slicedToArray from \"/home/angelito/Devs/appolus-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/angelito/Devs/appolus-master/src/routes/pages/signin.js\";\nimport React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { SignInUser } from \"../../constants/authActions\";\nimport IntlMessages from \"../../util/IntlMessages\";\nimport { Row, Card, CardTitle, Form, Label, Input, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Colxx } from \"../../components/CustomBootstrap\";\n\nconst SignIn = props => {\n  // Hooks useState\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1]; // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n  // ****** BEGINNING OF CHANGE ******\n\n\n  useEffect(() => {\n    // If logged in and user navigates to SignIn page, should redirect them to dashboard\n    if (props.authUser.isAuthenticated) {\n      props.history.push(\"/app/dashboard\");\n    }\n\n    if (props.errors) {\n      setErrors({\n        errors\n      });\n    }\n  }, [errors]); // ****** END OF CHANGE ******\n  // ****** BEGINNING OF CHANGE ******\n\n  useEffect(() => {// Should not ever set state during rendering, so do this in useEffect instead.\n  }, []); // ****** END OF CHANGE ******\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email,\n      password // since we handle the redirect within our component, we don't need to pass in props.history as a parameter\n\n    };\n    props.SignInUser(userData);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"fixed-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"h-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Colxx, {\n    xxs: \"12\",\n    md: \"10\",\n    className: \"mx-auto my-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"auth-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"position-relative image-side \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"text-white h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"MAGIC IS IN THE DETAILS\"), React.createElement(\"p\", {\n    className: \"white mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Please use your credentials to login.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), \"If you are not a member, please\", \" \", React.createElement(NavLink, {\n    to: \"/signup\",\n    className: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"register\"), \".\")), React.createElement(\"div\", {\n    className: \"form-side\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/\",\n    className: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"logo-single\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(CardTitle, {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"user.login-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"form-group has-float-label mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    onChange: e => setEmail(e.target.value),\n    value: props.email,\n    error: props.errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.errors.email, props.errors.emailnotfound), React.createElement(IntlMessages, {\n    id: \"user.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Label, {\n    className: \"form-group has-float-label mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    autoComplete: \"current-password\",\n    onChange: e => setPassword(e.target.value),\n    value: props.password,\n    error: props.errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.errors.password, props.errors.passwordincorrect), React.createElement(IntlMessages, {\n    id: \"user.password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/forgot-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"user.forgot-password-question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: \"btn-shadow\",\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(IntlMessages, {\n    id: \"user.login-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))))))))));\n};\n\nSignIn.propTypes = {\n  SignInUser: PropTypes.func.isRequired,\n  authUser: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  const authUser = state.authUser;\n  const errors = state.errors;\n  console.log(\"===== UserLoggued =====: \", authUser);\n  return {\n    authUser,\n    errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  SignInUser\n})(SignIn);","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/routes/pages/signin.js"],"names":["React","useState","useEffect","useRef","Fragment","PropTypes","connect","SignInUser","IntlMessages","Row","Card","CardTitle","Form","Label","Input","Button","NavLink","Colxx","SignIn","props","email","setEmail","password","setPassword","errors","setErrors","authUser","isAuthenticated","history","push","onSubmit","e","preventDefault","userData","target","value","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps","state","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\";\nimport { SignInUser } from \"../../constants/authActions\"\nimport IntlMessages from \"../../util/IntlMessages\";\nimport { Row, Card, CardTitle, Form, Label, Input, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Colxx } from \"../../components/CustomBootstrap\";\n\nconst SignIn = (props) => {\n\n  // Hooks useState\n  const [ email, setEmail ] = useState(\"\")\n  const [ password, setPassword ] = useState(\"\")\n  const [ errors, setErrors ] = useState([])\n\n  // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n  // ****** BEGINNING OF CHANGE ******\n  useEffect(() => {\n    // If logged in and user navigates to SignIn page, should redirect them to dashboard\n    if (props.authUser.isAuthenticated) {\n      props.history.push(\"/app/dashboard\")\n    }\n\n    if (props.errors) {\n      setErrors({errors})\n    }\n  }, [errors])\n  // ****** END OF CHANGE ******\n\n  // ****** BEGINNING OF CHANGE ******\n  useEffect(() => {\n    // Should not ever set state during rendering, so do this in useEffect instead.\n\n  }, [])\n  // ****** END OF CHANGE ******\n\n\n\n   const onSubmit = e => {\n     e.preventDefault()\n\n     const userData = {\n       email,\n       password\n     }\n\n     // since we handle the redirect within our component, we don't need to pass in props.history as a parameter\n     props.SignInUser(userData)\n   }\n\n\n  return (\n    <Fragment>\n      <div className=\"fixed-background\" />\n      <main>\n        <div className=\"container\">\n          <Row className=\"h-100\">\n            <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n              <Card className=\"auth-card\">\n                <div className=\"position-relative image-side \">\n                  <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n                  <p className=\"white mb-0\">\n                    Please use your credentials to login.\n                    <br />\n                    If you are not a member, please{\" \"}\n                    <NavLink to={`/signup`} className=\"white\">\n                      register\n                    </NavLink>\n                    .\n                  </p>\n                </div>\n                <div className=\"form-side\">\n                  <NavLink to={`/`} className=\"white\">\n                    <span className=\"logo-single\" />\n                  </NavLink>\n                  <CardTitle className=\"mb-4\">\n                    <IntlMessages id=\"user.login-title\" />\n                  </CardTitle>\n                  <form noValidate onSubmit={onSubmit}>\n                    <Label className=\"form-group has-float-label mb-4\">\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={e => setEmail(e.target.value)}\n                        value={props.email}\n                        error={props.errors.email}\n                      />\n                      <span className=\"red-text\">\n                          {props.errors.email}\n                          {props.errors.emailnotfound}\n                        </span>\n                      <IntlMessages id=\"user.email\" />\n                    </Label>\n                    <Label className=\"form-group has-float-label mb-4\">\n                      <Input\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => setPassword(e.target.value)}\n                        value={props.password}\n                        error={props.errors.password}\n                      />\n                      <span className=\"red-text\">\n                          {props.errors.password}\n                          {props.errors.passwordincorrect}\n                        </span>\n                      <IntlMessages id=\"user.password\" />\n                    </Label>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <NavLink to={`/forgot-password`}>\n                        <IntlMessages id=\"user.forgot-password-question\" />\n                      </NavLink>\n                      <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        className=\"btn-shadow\"\n                        size=\"lg\"\n                      >\n                        <IntlMessages id=\"user.login-button\" />\n                      </Button>\n                    </div>\n                  </form>\n                </div>\n              </Card>\n            </Colxx>\n          </Row>\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n\nSignIn.propTypes = {\n  SignInUser: PropTypes.func.isRequired,\n  authUser: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  const authUser = state.authUser\n  const errors = state.errors\n  console.log(\"===== UserLoggued =====: \", authUser)\n  return { authUser, errors }\n}\n\nexport default connect(\n  mapStateToProps,\n  { SignInUser }\n)(SignIn)\n"]},"metadata":{},"sourceType":"module"}