{"ast":null,"code":"// eslint-disable-next-line\n\n/*eslint jsx-quotes: [\"error\", \"prefer-double\"]*/\n\n/*\n  This file is a part of Appolus\n  Author: Angel Labrada Mass贸\n */\n// ===============================================================\n// Import Modules\n// ===============================================================\nimport axios from \"axios\";\nimport setAuthToken from \"../util/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./actionTypes\"; // Register User\n\nexport const signUpUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/signup\", userData).then(res => history.push(\"/signin\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add User\n\nexport const additionateUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/add\", userData).then(res => history.push(\"/app/users/add\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Login - get user token\n\nexport const SignInUser = userData => dispatch => {\n  axios.post(\"/api/users/signin\", userData).then(res => {\n    // Save to localStorage\n    // Set token to localStorage\n    const token = res.data.token;\n    localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current user\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/constants/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","signUpUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","additionateUser","SignInUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA;;AACA;;AACA;;;;AAKA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,eAA3D,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DT,EAAAA,KAAK,CACFU,IADH,CACQ,mBADR,EAC6BH,QAD7B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,SAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACb,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAChET,EAAAA,KAAK,CACFU,IADH,CACQ,gBADR,EAC0BH,QAD1B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,gBAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM,C,CAYP;;AACA,OAAO,MAAME,UAAU,GAAGd,QAAQ,IAAIE,QAAQ,IAAI;AAChDT,EAAAA,KAAK,CACFU,IADH,CACQ,mBADR,EAC6BH,QAD7B,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACX;AAEA;AAHW,UAIHU,KAJG,GAIOV,GAAG,CAACO,IAJX,CAIHG,KAJG;AAKXC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EALW,CAMX;;AACArB,IAAAA,YAAY,CAACqB,KAAD,CAAZ,CAPW,CAQX;;AACA,UAAMG,OAAO,GAAGvB,UAAU,CAACoB,KAAD,CAA1B,CATW,CAUX;;AACAb,IAAAA,QAAQ,CAACiB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,GAdH,EAeGX,KAfH,CAeSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEb,UADC;AAEPc,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAhBZ;AAqBD,CAtBM,C,CAwBP;;AACA,OAAO,MAAMO,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLT,IAAAA,IAAI,EAAEZ,gBADD;AAELa,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAO;AACLX,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMuB,UAAU,GAAG,MAAMnB,QAAQ,IAAI;AAC1C;AACAc,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAQ,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAPM","sourcesContent":["// eslint-disable-next-line\n/*eslint jsx-quotes: [\"error\", \"prefer-double\"]*/\n/*\n  This file is a part of Appolus\n  Author: Angel Labrada Mass贸\n */\n\n// ===============================================================\n// Import Modules\n// ===============================================================\nimport axios from \"axios\"\nimport setAuthToken from \"../util/setAuthToken\"\nimport jwt_decode from \"jwt-decode\"\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./actionTypes\"\n\n// Register User\nexport const signUpUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/signup\", userData)\n    .then(res => history.push(\"/signin\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n// Add User\nexport const additionateUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/add\", userData)\n    .then(res => history.push(\"/app/users/add\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n// Login - get user token\nexport const SignInUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/signin\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data\n      localStorage.setItem(\"jwtToken\", token)\n      // Set token to Auth header\n      setAuthToken(token)\n      // Decode token to get user data\n      const decoded = jwt_decode(token)\n      // Set current user\n      dispatch(setCurrentUser(decoded))\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}))\n}\n"]},"metadata":{},"sourceType":"module"}