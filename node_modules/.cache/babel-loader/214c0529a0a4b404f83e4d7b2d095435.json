{"ast":null,"code":"var _jsxFileName = \"/home/angelito/Devs/appolus-master/src/components/StateButton/index.js\";\nimport React from \"react\";\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\nimport classnames from 'classnames';\n\nclass StateButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOnClick = this.handleOnClick.bind(this);\n    this.state = {\n      status: \"default\",\n      message: \"\",\n      messageShow: false\n    };\n  }\n\n  handleOnClick() {\n    this.setState({\n      status: \"processing\"\n    }, () => {\n      this.props.onClick().then(res => {\n        this.setState({\n          status: \"success\",\n          message: res\n        });\n      }).catch(err => {\n        this.setState({\n          status: \"fail\",\n          message: err\n        });\n      }).finally(() => {\n        this.setState({\n          messageShow: true\n        }, () => {\n          setTimeout(() => {\n            this.setState({\n              messageShow: false,\n              status: \"default\"\n            });\n          }, 3000);\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: this.props.id,\n      className: \"btn-multiple-state  \".concat(this.props.className, \"  \").concat(classnames({\n        \"show-spinner\": this.state.status === \"processing\",\n        \"show-success\": this.state.status === \"success\",\n        \"show-fail\": this.state.status === \"fail\"\n      })),\n      color: this.props.color,\n      onClick: this.handleOnClick,\n      disabled: this.state.status != \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      placement: \"top\",\n      isOpen: this.state.messageShow,\n      target: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(PopoverBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.message)), React.createElement(\"span\", {\n      className: \"spinner d-inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bounce1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bounce2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"bounce3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"icon success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"simple-icon-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"icon fail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"simple-icon-exclamation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.props.children)));\n  }\n\n}\n\nexport default StateButton;","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/components/StateButton/index.js"],"names":["React","Button","Popover","PopoverBody","classnames","StateButton","Component","constructor","props","handleOnClick","bind","state","status","message","messageShow","setState","onClick","then","res","catch","err","finally","setTimeout","render","id","className","color","children"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\r\nimport classnames from 'classnames'\r\n\r\nclass StateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.state = {\r\n            status: \"default\",\r\n            message: \"\",\r\n            messageShow: false\r\n\r\n        };\r\n    }\r\n\r\n\r\n    handleOnClick() {\r\n\r\n        this.setState({\r\n            status: \"processing\"\r\n        }, () => {\r\n            this.props.onClick()\r\n                .then(res => {\r\n                    this.setState({\r\n                        status: \"success\",\r\n                        message: res\r\n                    })\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        status: \"fail\",\r\n                        message: err\r\n                    })\r\n                }).finally(() => {\r\n                    this.setState({\r\n                        messageShow: true\r\n                    }, () => {\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                messageShow: false,\r\n                                status: \"default\"\r\n                            });\r\n                        }, 3000)\r\n                    })\r\n                })\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <span>\r\n                <Button\r\n                    id={this.props.id}\r\n                    className={`btn-multiple-state  ${this.props.className}  ${classnames(\r\n                        {   \"show-spinner\": this.state.status === \"processing\", \r\n                            \"show-success\": this.state.status === \"success\", \r\n                            \"show-fail\": this.state.status === \"fail\" }\r\n                    )}`}\r\n                    color={this.props.color}\r\n                    onClick={this.handleOnClick}\r\n                    disabled={this.state.status != \"default\"}\r\n                >\r\n                    <Popover placement=\"top\" isOpen={this.state.messageShow} target={this.props.id} >\r\n                        <PopoverBody>{this.state.message}</PopoverBody>\r\n                    </Popover>\r\n                    <span className=\"spinner d-inline-block\">\r\n                        <span className=\"bounce1\"></span>\r\n                        <span className=\"bounce2\"></span>\r\n                        <span className=\"bounce3\"></span>\r\n                    </span>\r\n                    <span className=\"icon success\">\r\n                        <i className=\"simple-icon-check\"></i>\r\n                    </span>\r\n                    <span className=\"icon fail\">\r\n                        <i className=\"simple-icon-exclamation\"></i>\r\n                    </span>\r\n                    <span className=\"label\">{this.props.children}</span>\r\n                </Button>\r\n            </span >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}