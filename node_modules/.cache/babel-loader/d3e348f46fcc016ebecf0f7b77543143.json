{"ast":null,"code":"var _jsxFileName = \"/home/angelito/Devs/appolus-master/src/containers/Navbar/index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { injectIntl } from 'react-intl';\nimport { Row, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu, Input, Button, Nav, NavItem, NavLink, Container } from \"reactstrap\";\nimport { Colxx } from \"../../components/CustomBootstrap\";\nimport IntlMessages from \"../../util/IntlMessages\";\nimport { logoutUser } from \"../../constants/authActions\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setContainerClassnames, clickOnMobileMenu, changeLocale } from // authUser\n\"../../redux/actions\";\nimport { menuHiddenBreakpoint, searchPath, localeOptions } from \"../../constants/defaultValues\";\nimport notifications from \"../../data/topnav.notifications.json\";\nimport avatar from '../../assets/img/profile-pic-l.jpg';\nimport logo from \"../../assets/img/logo-black.svg\";\nimport logomovil from \"../../assets/img/logo-mobile.svg\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeLocale = locale => {\n      this.props.changeLocale(locale);\n    };\n\n    this.isInFullScreen = () => {\n      return document.fullscreenElement && document.fullscreenElement !== null || document.webkitFullscreenElement && document.webkitFullscreenElement !== null || document.mozFullScreenElement && document.mozFullScreenElement !== null || document.msFullscreenElement && document.msFullscreenElement !== null;\n    };\n\n    this.handleSearchIconClick = e => {\n      if (window.innerWidth < menuHiddenBreakpoint) {\n        let elem = e.target;\n\n        if (!e.target.classList.contains(\"search\")) {\n          if (e.target.parentElement.classList.contains(\"search\")) {\n            elem = e.target.parentElement;\n          } else if (e.target.parentElement.parentElement.classList.contains(\"search\")) {\n            elem = e.target.parentElement.parentElement;\n          }\n        }\n\n        if (elem.classList.contains(\"mobile-view\")) {\n          this.search();\n          elem.classList.remove(\"mobile-view\");\n          this.removeEventsSearch();\n        } else {\n          elem.classList.add(\"mobile-view\");\n          this.addEventsSearch();\n        }\n      } else {\n        this.search();\n      }\n    };\n\n    this.toggleFullScreen = () => {\n      const isInFullScreen = this.isInFullScreen();\n      var docElm = document.documentElement;\n\n      if (!isInFullScreen) {\n        if (docElm.requestFullscreen) {\n          docElm.requestFullscreen();\n        } else if (docElm.mozRequestFullScreen) {\n          docElm.mozRequestFullScreen();\n        } else if (docElm.webkitRequestFullScreen) {\n          docElm.webkitRequestFullScreen();\n        } else if (docElm.msRequestFullscreen) {\n          docElm.msRequestFullscreen();\n        }\n      } else {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen();\n        }\n      }\n\n      this.setState({\n        isInFullScreen: !isInFullScreen\n      });\n    };\n\n    this.handleLogout = () => {\n      this.props.logoutUser(this.props.history);\n    };\n\n    this.handleSignin = e => {\n      e.preventDefault();\n      return this.props.location.pathname = \"signin\";\n    };\n\n    this.menuButtonClick = this.menuButtonClick.bind(this);\n    this.mobileMenuButtonClick = this.mobileMenuButtonClick.bind(this);\n    this.search = this.search.bind(this);\n    this.handleChangeLocale = this.handleChangeLocale.bind(this);\n    this.handleDocumentClickSearch = this.handleDocumentClickSearch.bind(this);\n    this.addEventsSearch = this.addEventsSearch.bind(this);\n    this.removeEventsSearch = this.removeEventsSearch.bind(this);\n    this.handleSignin = this.handleSignin.bind(this); // this.onLogoutClick = this.onLogoutClick.bind(this);\n\n    this.state = {\n      isInFullScreen: false,\n      searchKeyword: \"\",\n      authUser: false\n    };\n  }\n\n  addEventsSearch() {\n    document.addEventListener(\"click\", this.handleDocumentClickSearch, true);\n  }\n\n  removeEventsSearch() {\n    document.removeEventListener(\"click\", this.handleDocumentClickSearch, true);\n  }\n\n  handleDocumentClickSearch(e) {\n    let isSearchClick = false;\n\n    if (e.target && e.target.classList && (e.target.classList.contains(\"navbar\") || e.target.classList.contains(\"simple-icon-magnifier\"))) {\n      isSearchClick = true;\n\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\n        this.search();\n      }\n    } else if (e.target.parentElement && e.target.parentElement.classList && e.target.parentElement.classList.contains(\"search\")) {\n      isSearchClick = true;\n    }\n\n    if (!isSearchClick) {\n      const input = document.querySelector(\".mobile-view\");\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\n      this.removeEventsSearch();\n      this.setState({\n        searchKeyword: \"\"\n      });\n    }\n  }\n\n  handleSearchInputChange(e) {\n    this.setState({\n      searchKeyword: e.target.value\n    });\n  }\n\n  handleSearchInputKeyPress(e) {\n    if (e.key === \"Enter\") {\n      this.search();\n    }\n  }\n\n  search() {\n    this.props.history.push(searchPath + \"/\" + this.state.searchKeyword);\n    this.setState({\n      searchKeyword: \"\"\n    });\n  }\n\n  menuButtonClick(e, menuClickCount, containerClassnames) {\n    e.preventDefault();\n    setTimeout(() => {\n      var event = document.createEvent(\"HTMLEvents\");\n      event.initEvent(\"resize\", false, false);\n      window.dispatchEvent(event);\n    }, 350);\n    this.props.setContainerClassnames(++menuClickCount, containerClassnames);\n  }\n\n  mobileMenuButtonClick(e, containerClassnames) {\n    e.preventDefault();\n    this.props.clickOnMobileMenu(containerClassnames);\n  }\n\n  render() {\n    const _this$props = this.props,\n          containerClassnames = _this$props.containerClassnames,\n          menuClickCount = _this$props.menuClickCount,\n          locale = _this$props.locale;\n    const messages = this.props.intl.messages;\n    return React.createElement(\"nav\", {\n      className: \"navbar fixed-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Colxx, {\n      xxl: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"mybtn_orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })))), React.createElement(Colxx, {\n      xxl: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"btn btn-outline-danger btn-sm\",\n      target: \"_top\",\n      href: \"https://themeforest.net/cart/configure_before_adding/22544383?license=regular&ref=ColoredStrategies&size=source\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"iconsmind-Shopping-Basket\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \" \", React.createElement(IntlMessages, {\n      id: \"user.buy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"nav.home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      to: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"nav.about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      to: \"/release\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"nav.release\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      to: \"/api\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"nav.api\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      tag: Link,\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(IntlMessages, {\n      id: \"nav.signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(UncontrolledDropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"light\",\n      size: \"sm\",\n      className: \"mylanguage-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, locale[\"locale\"])), React.createElement(DropdownMenu, {\n      className: \"mt-3\",\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, localeOptions.map(l => {\n      return React.createElement(DropdownItem, {\n        onClick: () => this.handleChangeLocale(l.id),\n        key: l.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, l.name);\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  menu,\n  settings\n}) => {\n  const containerClassnames = menu.containerClassnames,\n        menuClickCount = menu.menuClickCount;\n  const locale = settings;\n  return {\n    containerClassnames,\n    menuClickCount,\n    locale\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  changeLocale\n})(Navbar));","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/containers/Navbar/index.js"],"names":["React","Component","PropTypes","injectIntl","Row","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","Input","Button","Nav","NavItem","NavLink","Container","Colxx","IntlMessages","logoutUser","PerfectScrollbar","Link","connect","setContainerClassnames","clickOnMobileMenu","changeLocale","menuHiddenBreakpoint","searchPath","localeOptions","notifications","avatar","Navbar","constructor","props","handleChangeLocale","locale","isInFullScreen","document","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","handleSearchIconClick","e","window","innerWidth","elem","target","classList","contains","parentElement","search","remove","removeEventsSearch","add","addEventsSearch","toggleFullScreen","docElm","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","setState","handleLogout","history","handleSignin","preventDefault","location","pathname","menuButtonClick","bind","mobileMenuButtonClick","handleDocumentClickSearch","state","searchKeyword","authUser","addEventListener","removeEventListener","isSearchClick","input","querySelector","handleSearchInputChange","value","handleSearchInputKeyPress","key","push","menuClickCount","containerClassnames","setTimeout","event","createEvent","initEvent","dispatchEvent","render","messages","intl","map","l","id","name","mapStateToProps","menu","settings"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA0B,YAA1B;AACA,SACEC,GADF,EAEEC,oBAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,GARF,EASEC,OATF,EAUEC,OAVF,EAWEC,SAXF,QAYO,YAZP;AAaA,SAASC,KAAT,QAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,sBADF,EAEEC,iBAFF,EAGEC,YAHF,QAIE;AACK,qBALP;AAQA,SAASC,oBAAT,EAA+BC,UAA/B,EAA0CC,aAA1C,QAA+D,+BAA/D;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;;;;AAKA,MAAMC,MAAN,SAAqB5B,SAArB,CAA+B;AAC7B6B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,kBAlBmB,GAkBEC,MAAM,IAAI;AAC7B,WAAKF,KAAL,CAAWR,YAAX,CAAwBU,MAAxB;AACD,KApBkB;;AAAA,SAqBnBC,cArBmB,GAqBF,MAAM;AACrB,aACGC,QAAQ,CAACC,iBAAT,IAA8BD,QAAQ,CAACC,iBAAT,KAA+B,IAA9D,IACCD,QAAQ,CAACE,uBAAT,IACCF,QAAQ,CAACE,uBAAT,KAAqC,IAFvC,IAGCF,QAAQ,CAACG,oBAAT,IACCH,QAAQ,CAACG,oBAAT,KAAkC,IAJpC,IAKCH,QAAQ,CAACI,mBAAT,IAAgCJ,QAAQ,CAACI,mBAAT,KAAiC,IANpE;AAQD,KA9BkB;;AAAA,SA+BnBC,qBA/BmB,GA+BKC,CAAC,IAAI;AAC3B,UAAIC,MAAM,CAACC,UAAP,GAAoBnB,oBAAxB,EAA8C;AAC5C,YAAIoB,IAAI,GAAGH,CAAC,CAACI,MAAb;;AACA,YAAI,CAACJ,CAAC,CAACI,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,QAA5B,CAAL,EAA4C;AAC1C,cAAIN,CAAC,CAACI,MAAF,CAASG,aAAT,CAAuBF,SAAvB,CAAiCC,QAAjC,CAA0C,QAA1C,CAAJ,EAAyD;AACvDH,YAAAA,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASG,aAAhB;AACD,WAFD,MAEO,IACLP,CAAC,CAACI,MAAF,CAASG,aAAT,CAAuBA,aAAvB,CAAqCF,SAArC,CAA+CC,QAA/C,CAAwD,QAAxD,CADK,EAEL;AACAH,YAAAA,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASG,aAAT,CAAuBA,aAA9B;AACD;AACF;;AAED,YAAIJ,IAAI,CAACE,SAAL,CAAeC,QAAf,CAAwB,aAAxB,CAAJ,EAA4C;AAC1C,eAAKE,MAAL;AACAL,UAAAA,IAAI,CAACE,SAAL,CAAeI,MAAf,CAAsB,aAAtB;AACA,eAAKC,kBAAL;AACD,SAJD,MAIO;AACLP,UAAAA,IAAI,CAACE,SAAL,CAAeM,GAAf,CAAmB,aAAnB;AACA,eAAKC,eAAL;AACD;AACF,OApBD,MAoBO;AACL,aAAKJ,MAAL;AACD;AACF,KAvDkB;;AAAA,SA8GnBK,gBA9GmB,GA8GA,MAAM;AACvB,YAAMpB,cAAc,GAAG,KAAKA,cAAL,EAAvB;AAEA,UAAIqB,MAAM,GAAGpB,QAAQ,CAACqB,eAAtB;;AACA,UAAI,CAACtB,cAAL,EAAqB;AACnB,YAAIqB,MAAM,CAACE,iBAAX,EAA8B;AAC5BF,UAAAA,MAAM,CAACE,iBAAP;AACD,SAFD,MAEO,IAAIF,MAAM,CAACG,oBAAX,EAAiC;AACtCH,UAAAA,MAAM,CAACG,oBAAP;AACD,SAFM,MAEA,IAAIH,MAAM,CAACI,uBAAX,EAAoC;AACzCJ,UAAAA,MAAM,CAACI,uBAAP;AACD,SAFM,MAEA,IAAIJ,MAAM,CAACK,mBAAX,EAAgC;AACrCL,UAAAA,MAAM,CAACK,mBAAP;AACD;AACF,OAVD,MAUO;AACL,YAAIzB,QAAQ,CAAC0B,cAAb,EAA6B;AAC3B1B,UAAAA,QAAQ,CAAC0B,cAAT;AACD,SAFD,MAEO,IAAI1B,QAAQ,CAAC2B,oBAAb,EAAmC;AACxC3B,UAAAA,QAAQ,CAAC2B,oBAAT;AACD,SAFM,MAEA,IAAI3B,QAAQ,CAAC4B,mBAAb,EAAkC;AACvC5B,UAAAA,QAAQ,CAAC4B,mBAAT;AACD,SAFM,MAEA,IAAI5B,QAAQ,CAAC6B,gBAAb,EAA+B;AACpC7B,UAAAA,QAAQ,CAAC6B,gBAAT;AACD;AACF;;AACD,WAAKC,QAAL,CAAc;AACZ/B,QAAAA,cAAc,EAAE,CAACA;AADL,OAAd;AAGD,KA1IkB;;AAAA,SA4InBgC,YA5ImB,GA4IJ,MAAM;AACnB,WAAKnC,KAAL,CAAWd,UAAX,CAAsB,KAAKc,KAAL,CAAWoC,OAAjC;AACD,KA9IkB;;AAAA,SA+JnBC,YA/JmB,GA+JJ3B,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAAC4B,cAAF;AACA,aAAO,KAAKtC,KAAL,CAAWuC,QAAX,CAAoBC,QAApB,GAA+B,QAAtC;AACD,KAlKkB;;AAEjB,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKxB,MAAL,GAAc,KAAKA,MAAL,CAAYwB,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKzC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwByC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BF,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKpB,eAAL,GAAuB,KAAKA,eAAL,CAAqBoB,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKtB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBsB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKL,YAAL,GAAoB,KAAKA,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,CAApB,CATiB,CAUjB;;AACA,SAAKG,KAAL,GAAa;AACX1C,MAAAA,cAAc,EAAE,KADL;AAEX2C,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAwCDzB,EAAAA,eAAe,GAAG;AAChBlB,IAAAA,QAAQ,CAAC4C,gBAAT,CAA0B,OAA1B,EAAmC,KAAKJ,yBAAxC,EAAmE,IAAnE;AACD;;AACDxB,EAAAA,kBAAkB,GAAG;AACnBhB,IAAAA,QAAQ,CAAC6C,mBAAT,CAA6B,OAA7B,EAAsC,KAAKL,yBAA3C,EAAsE,IAAtE;AACD;;AAEDA,EAAAA,yBAAyB,CAAClC,CAAD,EAAI;AAC3B,QAAIwC,aAAa,GAAG,KAApB;;AACA,QACExC,CAAC,CAACI,MAAF,IACAJ,CAAC,CAACI,MAAF,CAASC,SADT,KAECL,CAAC,CAACI,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,QAA5B,KACCN,CAAC,CAACI,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,uBAA5B,CAHF,CADF,EAKE;AACAkC,MAAAA,aAAa,GAAG,IAAhB;;AACA,UAAIxC,CAAC,CAACI,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,uBAA5B,CAAJ,EAA0D;AACxD,aAAKE,MAAL;AACD;AACF,KAVD,MAUO,IACLR,CAAC,CAACI,MAAF,CAASG,aAAT,IACAP,CAAC,CAACI,MAAF,CAASG,aAAT,CAAuBF,SADvB,IAEAL,CAAC,CAACI,MAAF,CAASG,aAAT,CAAuBF,SAAvB,CAAiCC,QAAjC,CAA0C,QAA1C,CAHK,EAIL;AACAkC,MAAAA,aAAa,GAAG,IAAhB;AACD;;AAED,QAAI,CAACA,aAAL,EAAoB;AAClB,YAAMC,KAAK,GAAG/C,QAAQ,CAACgD,aAAT,CAAuB,cAAvB,CAAd;AACA,UAAID,KAAK,IAAIA,KAAK,CAACpC,SAAnB,EAA8BoC,KAAK,CAACpC,SAAN,CAAgBI,MAAhB,CAAuB,aAAvB;AAC9B,WAAKC,kBAAL;AACA,WAAKc,QAAL,CAAc;AACZY,QAAAA,aAAa,EAAE;AADH,OAAd;AAGD;AACF;;AACDO,EAAAA,uBAAuB,CAAC3C,CAAD,EAAI;AACzB,SAAKwB,QAAL,CAAc;AACZY,MAAAA,aAAa,EAAEpC,CAAC,CAACI,MAAF,CAASwC;AADZ,KAAd;AAGD;;AACDC,EAAAA,yBAAyB,CAAC7C,CAAD,EAAI;AAC3B,QAAIA,CAAC,CAAC8C,GAAF,KAAU,OAAd,EAAuB;AACrB,WAAKtC,MAAL;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAG;AACP,SAAKlB,KAAL,CAAWoC,OAAX,CAAmBqB,IAAnB,CAAwB/D,UAAU,GAAG,GAAb,GAAmB,KAAKmD,KAAL,CAAWC,aAAtD;AACA,SAAKZ,QAAL,CAAc;AACZY,MAAAA,aAAa,EAAE;AADH,KAAd;AAGD;;AAoCDL,EAAAA,eAAe,CAAC/B,CAAD,EAAIgD,cAAJ,EAAoBC,mBAApB,EAAyC;AACtDjD,IAAAA,CAAC,CAAC4B,cAAF;AAEAsB,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIC,KAAK,GAAGzD,QAAQ,CAAC0D,WAAT,CAAqB,YAArB,CAAZ;AACAD,MAAAA,KAAK,CAACE,SAAN,CAAgB,QAAhB,EAA0B,KAA1B,EAAiC,KAAjC;AACApD,MAAAA,MAAM,CAACqD,aAAP,CAAqBH,KAArB;AACD,KAJS,EAIP,GAJO,CAAV;AAKA,SAAK7D,KAAL,CAAWV,sBAAX,CAAkC,EAAEoE,cAApC,EAAoDC,mBAApD;AACD;;AACDhB,EAAAA,qBAAqB,CAACjC,CAAD,EAAIiD,mBAAJ,EAAyB;AAC5CjD,IAAAA,CAAC,CAAC4B,cAAF;AACA,SAAKtC,KAAL,CAAWT,iBAAX,CAA6BoE,mBAA7B;AACD;;AAODM,EAAAA,MAAM,GAAG;AAAA,wBAEiD,KAAKjE,KAFtD;AAAA,UAEC2D,mBAFD,eAECA,mBAFD;AAAA,UAEsBD,cAFtB,eAEsBA,cAFtB;AAAA,UAEsCxD,MAFtC,eAEsCA,MAFtC;AAAA,UAGAgE,QAHA,GAGY,KAAKlE,KAAL,CAAWmE,IAHvB,CAGAD,QAHA;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF,CADF,CAFJ,EAcI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAmD,MAAA,MAAM,EAAC,MAA1D;AACE,MAAA,IAAI,EAAC,iHADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,OAG8C,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH9C,CADF,CADA,EAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE9E,IAAd;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CARF,EAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAd;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CAbF,EAkBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAd;AAAoB,MAAA,EAAE,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CAlBF,EAuBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAd;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CAvBF,EA4BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAd;AAAoB,MAAA,EAAE,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CA5BF,EAkCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,SAAS,EAAC,mBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBc,MAAM,CAAC,QAAD,CAA9B,CANF,CADF,EASE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,MAAxB;AAA+B,MAAA,KAAK,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEP,aAAa,CAACyE,GAAd,CAAmBC,CAAD,IAAK;AACrB,aACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAM,KAAKpE,kBAAL,CAAwBoE,CAAC,CAACC,EAA1B,CAA7B;AAA4D,QAAA,GAAG,EAAED,CAAC,CAACC,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCD,CAAC,CAACE,IADH,CADF;AAKD,KAND,CAFF,CATF,CADF,CADF,CAlCF,CADF,CAdJ,CADF,CADF;AAkFD;;AA3P4B;;AA+P/B,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAAA,QACtCf,mBADsC,GACEc,IADF,CACtCd,mBADsC;AAAA,QACjBD,cADiB,GACEe,IADF,CACjBf,cADiB;AAE9C,QAAMxD,MAAM,GAAGwE,QAAf;AACA,SAAO;AAAEf,IAAAA,mBAAF;AAAuBD,IAAAA,cAAvB;AAAuCxD,IAAAA;AAAvC,GAAP;AACD,CAJD;;AAMA,eAAe9B,UAAU,CAACiB,OAAO,CAC/BmF,eAD+B,EAE/B;AAAElF,EAAAA,sBAAF;AAA0BC,EAAAA,iBAA1B;AAA6CC,EAAAA;AAA7C,CAF+B,CAAP,CAGxBM,MAHwB,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport { injectIntl} from 'react-intl';\r\nimport {\r\n  Row,\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Input,\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { Colxx } from \"../../components/CustomBootstrap\";\r\nimport IntlMessages from \"../../util/IntlMessages\";\r\nimport { logoutUser } from \"../../constants/authActions\"\r\n\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale,\r\n  // authUser\r\n} from \"../../redux/actions\";\r\n\r\n\r\nimport { menuHiddenBreakpoint, searchPath,localeOptions } from \"../../constants/defaultValues\";\r\n\r\nimport notifications from \"../../data/topnav.notifications.json\"\r\n\r\nimport avatar from '../../assets/img/profile-pic-l.jpg'\r\nimport logo from '../../assets/img/logo-black.svg'\r\nimport logomovil from '../../assets/img/logo-mobile.svg'\r\n\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.menuButtonClick = this.menuButtonClick.bind(this);\r\n    this.mobileMenuButtonClick = this.mobileMenuButtonClick.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.handleChangeLocale = this.handleChangeLocale.bind(this);\r\n    this.handleDocumentClickSearch = this.handleDocumentClickSearch.bind(this);\r\n    this.addEventsSearch = this.addEventsSearch.bind(this);\r\n    this.removeEventsSearch = this.removeEventsSearch.bind(this);\r\n    this.handleSignin = this.handleSignin.bind(this)\r\n    // this.onLogoutClick = this.onLogoutClick.bind(this);\r\n    this.state = {\r\n      isInFullScreen: false,\r\n      searchKeyword: \"\",\r\n      authUser: false\r\n    };\r\n  }\r\n\r\n  handleChangeLocale = locale => {\r\n    this.props.changeLocale(locale);\r\n  };\r\n  isInFullScreen = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n  handleSearchIconClick = e => {\r\n    if (window.innerWidth < menuHiddenBreakpoint) {\r\n      let elem = e.target;\r\n      if (!e.target.classList.contains(\"search\")) {\r\n        if (e.target.parentElement.classList.contains(\"search\")) {\r\n          elem = e.target.parentElement;\r\n        } else if (\r\n          e.target.parentElement.parentElement.classList.contains(\"search\")\r\n        ) {\r\n          elem = e.target.parentElement.parentElement;\r\n        }\r\n      }\r\n\r\n      if (elem.classList.contains(\"mobile-view\")) {\r\n        this.search();\r\n        elem.classList.remove(\"mobile-view\");\r\n        this.removeEventsSearch();\r\n      } else {\r\n        elem.classList.add(\"mobile-view\");\r\n        this.addEventsSearch();\r\n      }\r\n    } else {\r\n      this.search();\r\n    }\r\n  };\r\n  addEventsSearch() {\r\n    document.addEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  }\r\n  removeEventsSearch() {\r\n    document.removeEventListener(\"click\", this.handleDocumentClickSearch, true);\r\n  }\r\n\r\n  handleDocumentClickSearch(e) {\r\n    let isSearchClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"navbar\") ||\r\n        e.target.classList.contains(\"simple-icon-magnifier\"))\r\n    ) {\r\n      isSearchClick = true;\r\n      if (e.target.classList.contains(\"simple-icon-magnifier\")) {\r\n        this.search();\r\n      }\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      e.target.parentElement.classList.contains(\"search\")\r\n    ) {\r\n      isSearchClick = true;\r\n    }\r\n\r\n    if (!isSearchClick) {\r\n      const input = document.querySelector(\".mobile-view\");\r\n      if (input && input.classList) input.classList.remove(\"mobile-view\");\r\n      this.removeEventsSearch();\r\n      this.setState({\r\n        searchKeyword: \"\"\r\n      });\r\n    }\r\n  }\r\n  handleSearchInputChange(e) {\r\n    this.setState({\r\n      searchKeyword: e.target.value\r\n    });\r\n  }\r\n  handleSearchInputKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.search();\r\n    }\r\n  }\r\n\r\n  search() {\r\n    this.props.history.push(searchPath + \"/\" + this.state.searchKeyword);\r\n    this.setState({\r\n      searchKeyword: \"\"\r\n    });\r\n  }\r\n\r\n  toggleFullScreen = () => {\r\n    const isInFullScreen = this.isInFullScreen();\r\n\r\n    var docElm = document.documentElement;\r\n    if (!isInFullScreen) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n    this.setState({\r\n      isInFullScreen: !isInFullScreen\r\n    });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.props.logoutUser(this.props.history);\r\n  };\r\n\r\n  menuButtonClick(e, menuClickCount, containerClassnames) {\r\n    e.preventDefault();\r\n\r\n    setTimeout(() => {\r\n      var event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    this.props.setContainerClassnames(++menuClickCount, containerClassnames);\r\n  }\r\n  mobileMenuButtonClick(e, containerClassnames) {\r\n    e.preventDefault();\r\n    this.props.clickOnMobileMenu(containerClassnames);\r\n  }\r\n\r\n  handleSignin = e => {\r\n    e.preventDefault()\r\n    return this.props.location.pathname = \"signin\"\r\n  }\r\n\r\n  render() {\r\n\r\n    const { containerClassnames, menuClickCount, locale } = this.props;\r\n    const {messages} = this.props.intl;\r\n    return (\r\n      <nav className=\"navbar fixed-top\">\r\n        <Container>\r\n\r\n            <Colxx xxl=\"2\">\r\n              <Nav>\r\n                <NavItem>\r\n                  {/*<NavLink className=\"navbar-logo_left\" href=\"/\">\r\n                    <span className=\"d-none d-xs-block\" style={{ background: `url(${logo}) no-repeat`,  width: '100%', height: '100%', backgroundPosition: 'center center'}} />*\r\n                    <span className=\"d-block d-xs-none\" style={{ background: `url(${logomovil}) no-repeat`,  width: '100%', height: '100%', backgroundPosition: 'center center'}} />*/}\r\n                    <button className=\"mybtn_orange\"></button>\r\n                  {/*</NavLink>*/}\r\n                </NavItem>\r\n              </Nav>\r\n            </Colxx>\r\n\r\n            <Colxx xxl=\"10\">\r\n              <Nav className=\"justify-content-end\">\r\n              <NavItem>\r\n                <NavLink className=\"btn btn-outline-danger btn-sm\" target=\"_top\"\r\n                  href=\"https://themeforest.net/cart/configure_before_adding/22544383?license=regular&ref=ColoredStrategies&size=source\"\r\n                >\r\n                  <i className=\"iconsmind-Shopping-Basket\" /> <IntlMessages id=\"user.buy\" />\r\n                </NavLink>\r\n              </NavItem>\r\n                <NavItem >\r\n                  <NavLink tag={Link} to=\"/index\">\r\n                  <IntlMessages id=\"nav.home\" />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem >\r\n                  <NavLink tag={Link} to=\"/about\">\r\n                  <IntlMessages id=\"nav.about\" />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem >\r\n                  <NavLink tag={Link} to=\"/release\">\r\n                  <IntlMessages id=\"nav.release\" />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem >\r\n                  <NavLink tag={Link} to=\"/api\">\r\n                  <IntlMessages id=\"nav.api\" />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem >\r\n                  <NavLink tag={Link} to=\"/signin\">\r\n                  <IntlMessages id=\"nav.signin\" />\r\n                  </NavLink>\r\n                </NavItem>\r\n\r\n                <NavItem>\r\n                  <NavLink  to=\"#\">\r\n                    <UncontrolledDropdown>\r\n                      <DropdownToggle\r\n                        caret\r\n                        color=\"light\"\r\n                        size=\"sm\"\r\n                        className=\"mylanguage-button\"\r\n                      >\r\n                        <span className=\"name\">{locale[\"locale\"]}</span>\r\n                      </DropdownToggle>\r\n                      <DropdownMenu className=\"mt-3\" right>\r\n                      {\r\n                        localeOptions.map((l)=>{\r\n                          return(\r\n                            <DropdownItem onClick={() => this.handleChangeLocale(l.id)} key={l.id}>\r\n                            {l.name}\r\n                          </DropdownItem>\r\n                          )\r\n                        })\r\n                      }\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n\r\n            </Colxx>\r\n        </Container>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ menu, settings }) => {\r\n  const { containerClassnames, menuClickCount } = menu;\r\n  const locale = settings;\r\n  return { containerClassnames, menuClickCount, locale };\r\n}\r\n\r\nexport default injectIntl(connect(\r\n  mapStateToProps,\r\n  { setContainerClassnames, clickOnMobileMenu, changeLocale }\r\n)(Navbar));\r\n"]},"metadata":{},"sourceType":"module"}