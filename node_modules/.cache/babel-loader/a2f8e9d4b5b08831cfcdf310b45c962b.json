{"ast":null,"code":"var _jsxFileName = \"/home/angelito/Devs/appolus-master/src/components/ReactNotifications/NotificationContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationManager from './NotificationManager';\nimport Notifications from './Notifications';\n\nclass NotificationContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notifications: []\n    };\n\n    this.componentWillMount = () => {\n      NotificationManager.addChangeListener(this.handleStoreChange);\n    };\n\n    this.componentWillUnmount = () => {\n      NotificationManager.removeChangeListener(this.handleStoreChange);\n    };\n\n    this.handleStoreChange = notifications => {\n      this.setState({\n        notifications\n      });\n    };\n\n    this.handleRequestHide = notification => {\n      NotificationManager.remove(notification);\n    };\n  }\n\n  render() {\n    const notifications = this.state.notifications;\n    const _this$props = this.props,\n          enterTimeout = _this$props.enterTimeout,\n          leaveTimeout = _this$props.leaveTimeout;\n    return React.createElement(Notifications, {\n      enterTimeout: enterTimeout,\n      leaveTimeout: leaveTimeout,\n      notifications: notifications,\n      onRequestHide: this.handleRequestHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nNotificationContainer.propTypes = {\n  enterTimeout: PropTypes.number,\n  leaveTimeout: PropTypes.number\n};\nNotificationContainer.defaultProps = {\n  enterTimeout: 400,\n  leaveTimeout: 400\n};\nexport default NotificationContainer;","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/components/ReactNotifications/NotificationContainer.js"],"names":["React","PropTypes","NotificationManager","Notifications","NotificationContainer","Component","state","notifications","componentWillMount","addChangeListener","handleStoreChange","componentWillUnmount","removeChangeListener","setState","handleRequestHide","notification","remove","render","props","enterTimeout","leaveTimeout","propTypes","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAAA;AAAA;AAAA,SAWlDC,KAXkD,GAW1C;AACNC,MAAAA,aAAa,EAAE;AADT,KAX0C;;AAAA,SAelDC,kBAfkD,GAe7B,MAAM;AACzBN,MAAAA,mBAAmB,CAACO,iBAApB,CAAsC,KAAKC,iBAA3C;AACD,KAjBiD;;AAAA,SAmBlDC,oBAnBkD,GAmB3B,MAAM;AAC3BT,MAAAA,mBAAmB,CAACU,oBAApB,CAAyC,KAAKF,iBAA9C;AACD,KArBiD;;AAAA,SAuBlDA,iBAvBkD,GAuB7BH,aAAD,IAAmB;AACrC,WAAKM,QAAL,CAAc;AACZN,QAAAA;AADY,OAAd;AAGD,KA3BiD;;AAAA,SA6BlDO,iBA7BkD,GA6B7BC,YAAD,IAAkB;AACpCb,MAAAA,mBAAmB,CAACc,MAApB,CAA2BD,YAA3B;AACD,KA/BiD;AAAA;;AAiClDE,EAAAA,MAAM,GAAG;AAAA,UACCV,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAAA,wBAEgC,KAAKW,KAFrC;AAAA,UAECC,YAFD,eAECA,YAFD;AAAA,UAEeC,YAFf,eAEeA,YAFf;AAGP,WACE,oBAAC,aAAD;AACE,MAAA,YAAY,EAAED,YADhB;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,aAAa,EAAEb,aAHjB;AAIE,MAAA,aAAa,EAAE,KAAKO,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AA5CiD;;AAA9CV,qB,CACGiB,S,GAAY;AACjBF,EAAAA,YAAY,EAAElB,SAAS,CAACqB,MADP;AAEjBF,EAAAA,YAAY,EAAEnB,SAAS,CAACqB;AAFP,C;AADflB,qB,CAMGmB,Y,GAAe;AACpBJ,EAAAA,YAAY,EAAE,GADM;AAEpBC,EAAAA,YAAY,EAAE;AAFM,C;AAyCxB,eAAehB,qBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationManager from './NotificationManager';\nimport Notifications from './Notifications';\n\nclass NotificationContainer extends React.Component {\n  static propTypes = {\n    enterTimeout: PropTypes.number,\n    leaveTimeout: PropTypes.number\n  };\n\n  static defaultProps = {\n    enterTimeout: 400,\n    leaveTimeout: 400\n  };\n\n  state = {\n    notifications: []\n  };\n\n  componentWillMount = () => {\n    NotificationManager.addChangeListener(this.handleStoreChange);\n  };\n\n  componentWillUnmount = () => {\n    NotificationManager.removeChangeListener(this.handleStoreChange);\n  };\n\n  handleStoreChange = (notifications) => {\n    this.setState({\n      notifications\n    });\n  };\n\n  handleRequestHide = (notification) => {\n    NotificationManager.remove(notification);\n  };\n\n  render() {\n    const { notifications } = this.state;\n    const { enterTimeout, leaveTimeout } = this.props;\n    return (\n      <Notifications\n        enterTimeout={enterTimeout}\n        leaveTimeout={leaveTimeout}\n        notifications={notifications}\n        onRequestHide={this.handleRequestHide}\n      />\n    );\n  }\n}\n\nexport default NotificationContainer;\n"]},"metadata":{},"sourceType":"module"}