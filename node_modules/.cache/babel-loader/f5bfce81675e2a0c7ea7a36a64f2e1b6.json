{"ast":null,"code":"import _slicedToArray from \"/home/angelito/Devs/appolus-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/angelito/Devs/appolus-master/src/components/Dashboard/tickets/listDefaultTickets.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { injectIntl } from 'react-intl';\nimport IntlMessages from '../../../util/IntlMessages';\nimport ListTickets from './Tickets';\nimport Pagination from './Pagination';\n\nconst ListDefaulTickets = props => {\n  // ===============================================================\n  // Hooks useState\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tickets = _useState2[0],\n        setTickets = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentPage = _useState6[0],\n        setCurrentPage = _useState6[1];\n\n  const _useState7 = useState(3),\n        _useState8 = _slicedToArray(_useState7, 2),\n        ticketsPerPage = _useState8[0],\n        setTotalTicketsPerPage = _useState8[1]; // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n\n\n  useEffect(() => {\n    const fetchTickets = async () => {\n      setLoading(true);\n      const res = await axios.get('/api/tickets/list');\n      setTickets(res.data.tickets.reverse());\n      setLoading(false);\n    };\n\n    fetchTickets();\n  }, []); // console.log(\"array de tickets: \", tickets)\n  // Get current tickets\n\n  const indexOfLastTicket = currentPage * ticketsPerPage;\n  const indexOfFirstTicket = indexOfLastTicket - ticketsPerPage;\n  const currentTickets = tickets.slice(indexOfFirstTicket, indexOfLastTicket); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber); // Increase tickets per page\n\n\n  const increaseTicketsPerPage = e => setTotalTicketsPerPage(e.target.value); // Increase tickets per page in search\n\n\n  const increaseTicketsPerPageInSearch = num => setTotalTicketsPerPage(num);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"loading\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid\",\n    id: \"kt_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ListTickets, {\n    tickets: currentTickets,\n    loading: loading,\n    increaseTicketsPerPageInSearch: increaseTicketsPerPageInSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Pagination, {\n    ticketsPerPage: ticketsPerPage,\n    increaseTicketsPerPage: increaseTicketsPerPage,\n    totalTickets: tickets.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => {\n  const search = state.search;\n  return {\n    search\n  };\n};\n\nexport default connect(mapStateToProps)(injectIntl(ListDefaulTickets));","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/components/Dashboard/tickets/listDefaultTickets.js"],"names":["React","useState","useEffect","axios","connect","injectIntl","IntlMessages","ListTickets","Pagination","ListDefaulTickets","props","tickets","setTickets","loading","setLoading","currentPage","setCurrentPage","ticketsPerPage","setTotalTicketsPerPage","fetchTickets","res","get","data","reverse","indexOfLastTicket","indexOfFirstTicket","currentTickets","slice","paginate","pageNumber","increaseTicketsPerPage","e","target","value","increaseTicketsPerPageInSearch","num","length","mapStateToProps","state","search"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from \"react-redux\";\nimport { injectIntl } from 'react-intl'\nimport IntlMessages from '../../../util/IntlMessages'\n\nimport ListTickets from './Tickets'\nimport Pagination from './Pagination'\n\nconst ListDefaulTickets = (props) => {\n  // ===============================================================\n  // Hooks useState\n  // ===============================================================\n  const [tickets, setTickets] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [ticketsPerPage, setTotalTicketsPerPage] = useState(3);\n\n  // ===============================================================\n  // Hooks useEffect\n  // ===============================================================\n  useEffect(() => {\n    const fetchTickets = async () => {\n      setLoading(true)\n      const res = await axios.get('/api/tickets/list')\n      setTickets(res.data.tickets.reverse())\n      setLoading(false)\n    }\n\n    fetchTickets()\n  }, [])\n\n  // console.log(\"array de tickets: \", tickets)\n\n  // Get current tickets\n  const indexOfLastTicket = currentPage * ticketsPerPage\n  const indexOfFirstTicket = indexOfLastTicket - ticketsPerPage\n  const currentTickets = tickets.slice(indexOfFirstTicket, indexOfLastTicket)\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n\n  // Increase tickets per page\n  const increaseTicketsPerPage = e => setTotalTicketsPerPage(e.target.value)\n\n  // Increase tickets per page in search\n  const increaseTicketsPerPageInSearch = num => setTotalTicketsPerPage(num)\n\n  if (loading){\n    return (\n      <div>loading</div>\n    )\n  }\n\n\n  return (\n    <>\n      <div className=\"kt-grid__item kt-grid__item--fluid\" id=\"kt_content\">\n        <ListTickets tickets={currentTickets} loading={loading} increaseTicketsPerPageInSearch={increaseTicketsPerPageInSearch} />\n        <Pagination\n          ticketsPerPage={ticketsPerPage}\n          increaseTicketsPerPage={increaseTicketsPerPage}\n          totalTickets={tickets.length}\n          paginate={paginate}\n          currentPage={currentPage}\n        />\n      </div>\n    </>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  const search = state.search\n  return { search }\n}\n\n\nexport default connect(\n  mapStateToProps,\n)(injectIntl(ListDefaulTickets))\n"]},"metadata":{},"sourceType":"module"}