{"ast":null,"code":"var _jsxFileName = \"/home/angelito/Devs/appolus-master/src/components/ReactSiema/ReactSiemaCarousel.js\";\nimport React, { Component, Fragment } from \"react\";\nimport ReactSiema from \"./lib\";\nexport default class ReactSiemaCarousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n    this.onDotClick = this.onDotClick.bind(this);\n    this.updateAfterDrag = this.updateAfterDrag.bind(this);\n    this.slider = null;\n    this.state = {\n      total: React.Children.count(this.props.children),\n      perPage: 1,\n      current: 0,\n      activeDotIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      current: this.refs.slider.currentSlide,\n      perPage: this.refs.slider.getPerPage()\n    });\n  }\n\n  updateAfterDrag() {\n    this.setState({\n      current: this.refs.slider.currentSlide\n    });\n  }\n\n  gotoNext() {\n    this.refs.slider.next();\n    this.setState({\n      current: this.refs.slider.currentSlide\n    });\n  }\n\n  gotoPrev() {\n    this.refs.slider.prev();\n    this.setState({\n      current: this.refs.slider.currentSlide\n    });\n  }\n\n  onDotClick(dotIndex) {\n    let perPage = this.state.perPage;\n    let current = dotIndex * perPage;\n    let total = this.state.total;\n    this.setState({\n      current: current\n    });\n\n    if (perPage + current > total) {\n      current = total - perPage;\n    }\n\n    this.refs.slider.goTo(current);\n  }\n\n  renderDots() {\n    if (this.state.perPage === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    let dotCount = Math.ceil(this.state.total / this.state.perPage);\n    let dots = [];\n    let total = this.state.total;\n    let current = this.state.current;\n    let perPage = this.state.perPage;\n    let dotIndex = Math.floor(current / perPage);\n\n    if (current + perPage >= total) {\n      dotIndex = dotCount - 1;\n    }\n\n    if (dotCount === 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n\n    for (let i = 0; i < dotCount; i++) {\n      let className = i === dotIndex ? \"active\" : \"\";\n      dots.push(React.createElement(\"button\", {\n        key: i,\n        onClick: () => this.onDotClick(i),\n        className: \"slider-dot \".concat(className),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n\n    return dots;\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ReactSiema, Object.assign({\n      ref: \"slider\",\n      onResize: perPage => {\n        this.setState({\n          perPage: perPage\n        });\n      },\n      updateAfterDrag: this.updateAfterDrag\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.props.children), this.props.controls !== false && React.createElement(\"div\", {\n      className: \"slider-nav text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"left-arrow btn btn-link\",\n      onClick: () => this.gotoPrev(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"simple-icon-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"slider-dot-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.renderDots()), React.createElement(\"button\", {\n      className: \"left-arrow btn btn-link\",\n      onClick: () => this.gotoNext(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"simple-icon-arrow-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/components/ReactSiema/ReactSiemaCarousel.js"],"names":["React","Component","Fragment","ReactSiema","ReactSiemaCarousel","constructor","props","gotoNext","bind","renderDots","onDotClick","updateAfterDrag","slider","state","total","Children","count","children","perPage","current","activeDotIndex","componentDidMount","setState","refs","currentSlide","getPerPage","next","gotoPrev","prev","dotIndex","goTo","dotCount","Math","ceil","dots","floor","i","className","push","render","controls"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,OAAvB;AAEA,eAAe,MAAMC,kBAAN,SAAiCJ,KAAK,CAACC,SAAvC,CAAiD;AAC9DI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKI,MAAL,GAAc,IAAd;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEd,KAAK,CAACe,QAAN,CAAeC,KAAf,CAAqB,KAAKV,KAAL,CAAWW,QAAhC,CADI;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,OAAO,EAAE,CAHE;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZH,MAAAA,OAAO,EAAE,KAAKI,IAAL,CAAUX,MAAV,CAAiBY,YADd;AAEZN,MAAAA,OAAO,EAAE,KAAKK,IAAL,CAAUX,MAAV,CAAiBa,UAAjB;AAFG,KAAd;AAID;;AAEDd,EAAAA,eAAe,GAAG;AAChB,SAAKW,QAAL,CAAc;AACZH,MAAAA,OAAO,EAAE,KAAKI,IAAL,CAAUX,MAAV,CAAiBY;AADd,KAAd;AAGD;;AAEDjB,EAAAA,QAAQ,GAAG;AACT,SAAKgB,IAAL,CAAUX,MAAV,CAAiBc,IAAjB;AACA,SAAKJ,QAAL,CAAc;AACZH,MAAAA,OAAO,EAAE,KAAKI,IAAL,CAAUX,MAAV,CAAiBY;AADd,KAAd;AAGD;;AAEDG,EAAAA,QAAQ,GAAG;AACT,SAAKJ,IAAL,CAAUX,MAAV,CAAiBgB,IAAjB;AACA,SAAKN,QAAL,CAAc;AACZH,MAAAA,OAAO,EAAE,KAAKI,IAAL,CAAUX,MAAV,CAAiBY;AADd,KAAd;AAGD;;AAEDd,EAAAA,UAAU,CAACmB,QAAD,EAAW;AACnB,QAAIX,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAzB;AACA,QAAIC,OAAO,GAAGU,QAAQ,GAAGX,OAAzB;AACA,QAAIJ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AAEA,SAAKQ,QAAL,CAAc;AACZH,MAAAA,OAAO,EAAEA;AADG,KAAd;;AAIA,QAAID,OAAO,GAAGC,OAAV,GAAoBL,KAAxB,EAA+B;AAC7BK,MAAAA,OAAO,GAAGL,KAAK,GAAGI,OAAlB;AACD;;AAED,SAAKK,IAAL,CAAUX,MAAV,CAAiBkB,IAAjB,CAAsBX,OAAtB;AACD;;AAEDV,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKI,KAAL,CAAWK,OAAX,KAAuB,CAA3B,EAA8B;AAC5B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,QAAIa,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKpB,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWK,OAAxC,CAAf;AACA,QAAIgB,IAAI,GAAG,EAAX;AAEA,QAAIpB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,QAAIK,OAAO,GAAG,KAAKN,KAAL,CAAWM,OAAzB;AACA,QAAID,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAzB;AACA,QAAIW,QAAQ,GAAGG,IAAI,CAACG,KAAL,CAAWhB,OAAO,GAAGD,OAArB,CAAf;;AACA,QAAIC,OAAO,GAAGD,OAAV,IAAqBJ,KAAzB,EAAgC;AAC9Be,MAAAA,QAAQ,GAAGE,QAAQ,GAAG,CAAtB;AACD;;AAED,QAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AACjC,UAAIC,SAAS,GAAGD,CAAC,KAAKP,QAAN,GAAiB,QAAjB,GAA4B,EAA5C;AACAK,MAAAA,IAAI,CAACI,IAAL,CACE;AACE,QAAA,GAAG,EAAEF,CADP;AAEE,QAAA,OAAO,EAAE,MAAM,KAAK1B,UAAL,CAAgB0B,CAAhB,CAFjB;AAGE,QAAA,SAAS,uBAAgBC,SAAhB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;AACD,WAAOH,IAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAC,QADN;AAEE,MAAA,QAAQ,EAAErB,OAAO,IAAI;AACnB,aAAKI,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGD,OANH;AAOE,MAAA,eAAe,EAAE,KAAKP;AAPxB,OAQM,KAAKL,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUG,KAAKA,KAAL,CAAWW,QAVd,CADF,EAaG,KAAKX,KAAL,CAAWkC,QAAX,KAAwB,KAAxB,IACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKb,QAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,KAAKlB,UAAL,EAAvC,CAPF,EAQE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKF,QAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CARF,CAdJ,CADF;AAiCD;;AA7H6D","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport ReactSiema from \"./lib\";\r\n\r\nexport default class ReactSiemaCarousel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gotoNext = this.gotoNext.bind(this);\r\n    this.renderDots = this.renderDots.bind(this);\r\n    this.onDotClick = this.onDotClick.bind(this);\r\n    this.updateAfterDrag = this.updateAfterDrag.bind(this);\r\n\r\n    this.slider = null;\r\n    this.state = {\r\n      total: React.Children.count(this.props.children),\r\n      perPage: 1,\r\n      current: 0,\r\n      activeDotIndex: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      current: this.refs.slider.currentSlide,\r\n      perPage: this.refs.slider.getPerPage()\r\n    });\r\n  }\r\n\r\n  updateAfterDrag() {\r\n    this.setState({\r\n      current: this.refs.slider.currentSlide\r\n    });\r\n  }\r\n\r\n  gotoNext() {\r\n    this.refs.slider.next();\r\n    this.setState({\r\n      current: this.refs.slider.currentSlide\r\n    });\r\n  }\r\n\r\n  gotoPrev() {\r\n    this.refs.slider.prev();\r\n    this.setState({\r\n      current: this.refs.slider.currentSlide\r\n    });\r\n  }\r\n\r\n  onDotClick(dotIndex) {\r\n    let perPage = this.state.perPage;\r\n    let current = dotIndex * perPage;\r\n    let total = this.state.total;\r\n\r\n    this.setState({\r\n      current: current\r\n    });\r\n\r\n    if (perPage + current > total) {\r\n      current = total - perPage;\r\n    }\r\n\r\n    this.refs.slider.goTo(current);\r\n  }\r\n\r\n  renderDots() {\r\n    if (this.state.perPage === 0) {\r\n      return <div />;\r\n    }\r\n    let dotCount = Math.ceil(this.state.total / this.state.perPage);\r\n    let dots = [];\r\n\r\n    let total = this.state.total;\r\n    let current = this.state.current;\r\n    let perPage = this.state.perPage;\r\n    let dotIndex = Math.floor(current / perPage);\r\n    if (current + perPage >= total) {\r\n      dotIndex = dotCount - 1;\r\n    }\r\n\r\n    if (dotCount === 1) {\r\n      return <div />;\r\n    }\r\n\r\n    for (let i = 0; i < dotCount; i++) {\r\n      let className = i === dotIndex ? \"active\" : \"\";\r\n      dots.push(\r\n        <button\r\n          key={i}\r\n          onClick={() => this.onDotClick(i)}\r\n          className={`slider-dot ${className}`}\r\n        />\r\n      );\r\n    }\r\n    return dots;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ReactSiema\r\n          ref=\"slider\"\r\n          onResize={perPage => {\r\n            this.setState({\r\n              perPage: perPage\r\n            });\r\n          }}\r\n          updateAfterDrag={this.updateAfterDrag}\r\n          {...this.props}\r\n        >\r\n          {this.props.children}\r\n        </ReactSiema>\r\n        {this.props.controls !== false && (\r\n          <div className=\"slider-nav text-center\">\r\n            <button\r\n              className=\"left-arrow btn btn-link\"\r\n              onClick={() => this.gotoPrev()}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </button>\r\n            <div className=\"slider-dot-container\">{this.renderDots()}</div>\r\n            <button\r\n              className=\"left-arrow btn btn-link\"\r\n              onClick={() => this.gotoNext()}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}