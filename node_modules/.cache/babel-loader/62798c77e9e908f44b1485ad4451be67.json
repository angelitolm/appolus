{"ast":null,"code":"import _objectWithoutProperties from \"/home/angelito/Devs/appolus-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/angelito/Devs/appolus-master/src/containers/App.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\nimport ColorSwitcher from '../components/ColorSwitcher';\nimport { NotificationContainer } from \"../components/ReactNotifications\"; // import { defaultStartPath } from '../constants/defaultValues'\n\nimport { connect } from \"react-redux\";\nimport AppLocale from '../lang';\nimport dashboards from '../routes/dashboards/';\nimport pages from '../routes/pages';\nimport ui from '../routes/ui';\nimport MainRoute from '../routes'; // import Home from '../routes/frontend/homepage'\n// import login from '../routes/pages/login'\n// import defaultDashboard from '../routes/dashboards/default'\n// ===============================================================\n// Layout Routes\n// ===============================================================\n\nimport LoginLayoutRoute from '../routes/layouts/LoginLayoutRoute';\nimport PublicLayoutRoute from '../routes/layouts/PublicLayoutRoute';\nimport PrivateLayoutRoute from '../routes/layouts/PrivateLayoutRoute';\nimport NotFoundLayoutRoute from '../routes/layouts/NotFoundRoute';\nimport signin from '../routes/pages/signin';\nimport error from '../routes/pages/error';\nimport TopNav from '../containers/TopNav';\nimport Sidebar from '../containers/Sidebar';\nimport homepage from '../routes/frontend/homepage';\nimport dashboard from '../routes/dashboards/default';\nimport '../assets/css/vendor/bootstrap.min.css';\nimport '../assets/css/style.bundle.min.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'react-table/react-table.css';\n\nconst App = (_ref) => {\n  let Component = _ref.component,\n      location = _ref.location,\n      authUser = _ref.authUser,\n      locale = _ref.locale,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"location\", \"authUser\", \"locale\"]);\n\n  // const { containerClassnames} = props;\n  const currentAppLocale = AppLocale[locale]; // if (location.pathname === '/'/* || location.pathname === '/app' || location.pathname === '/app/'*/) {\n  // \treturn (<Redirect to={homePagePath} />);\n  // }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NotificationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(PublicLayoutRoute, {\n    exact: true,\n    path: \"/\",\n    component: homepage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(LoginLayoutRoute, {\n    exact: true,\n    path: \"/signin\",\n    component: signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(PrivateLayoutRoute, {\n    path: \"/app\",\n    component: MainRoute,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(NotFoundLayoutRoute, {\n    exact: true,\n    path: \"*\",\n    component: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/404\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(ColorSwitcher, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n}; // MainRoute.propTypes = {\n//   authUser: PropTypes.object.isRequired\n// };\n\n\nconst mapStateToProps = ({\n  settings,\n  authUser\n}) => {\n  const user = authUser.isAuthenticated.user;\n  const locale = settings.locale;\n  return {\n    /*user,*/\n    locale,\n    user\n  };\n};\n\nexport default connect(mapStateToProps, {})(App);","map":{"version":3,"sources":["/home/angelito/Devs/appolus-master/src/containers/App.js"],"names":["React","Fragment","PropTypes","Redirect","Route","Switch","IntlProvider","ColorSwitcher","NotificationContainer","connect","AppLocale","dashboards","pages","ui","MainRoute","LoginLayoutRoute","PublicLayoutRoute","PrivateLayoutRoute","NotFoundLayoutRoute","signin","error","TopNav","Sidebar","homepage","dashboard","App","Component","component","location","authUser","locale","rest","currentAppLocale","messages","mapStateToProps","settings","user","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from \"prop-types\"\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport ColorSwitcher from '../components/ColorSwitcher'\r\nimport { NotificationContainer } from \"../components/ReactNotifications\";\r\n\r\n// import { defaultStartPath } from '../constants/defaultValues'\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AppLocale from '../lang';\r\n\r\nimport dashboards from '../routes/dashboards/'\r\nimport pages from '../routes/pages';\r\nimport ui from '../routes/ui'\r\n\r\nimport MainRoute from '../routes'\r\n// import Home from '../routes/frontend/homepage'\r\n// import login from '../routes/pages/login'\r\n// import defaultDashboard from '../routes/dashboards/default'\r\n\r\n// ===============================================================\r\n// Layout Routes\r\n// ===============================================================\r\nimport LoginLayoutRoute from '../routes/layouts/LoginLayoutRoute'\r\nimport PublicLayoutRoute from '../routes/layouts/PublicLayoutRoute'\r\nimport PrivateLayoutRoute from '../routes/layouts/PrivateLayoutRoute'\r\nimport NotFoundLayoutRoute from '../routes/layouts/NotFoundRoute'\r\n\r\nimport signin from '../routes/pages/signin';\r\nimport error from '../routes/pages/error'\r\n\r\nimport TopNav from '../containers/TopNav'\r\nimport Sidebar from '../containers/Sidebar'\r\n\r\nimport homepage from '../routes/frontend/homepage'\r\nimport dashboard from '../routes/dashboards/default'\r\n\r\nimport '../assets/css/vendor/bootstrap.min.css'\r\nimport '../assets/css/style.bundle.min.css'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-table/react-table.css'\r\n\r\n\r\nconst App = ({ component: Component, location, authUser, locale, ...rest }) => {\r\n\r\n// const { containerClassnames} = props;\r\n\t\tconst currentAppLocale = AppLocale[locale];\r\n\t\t// if (location.pathname === '/'/* || location.pathname === '/app' || location.pathname === '/app/'*/) {\r\n\t\t// \treturn (<Redirect to={homePagePath} />);\r\n\t\t// }\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<IntlProvider\r\n\t\t\t\t\tlocale={currentAppLocale.locale}\r\n\t\t\t\t\tmessages={currentAppLocale.messages}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t<NotificationContainer />\r\n  \t\t\t\t\t\t<Switch>\r\n                <PublicLayoutRoute exact path=\"/\" component={homepage} />\r\n                <LoginLayoutRoute exact path=\"/signin\" component={signin} />\r\n                <PrivateLayoutRoute path=\"/app\" component={MainRoute} />\r\n                <NotFoundLayoutRoute exact path=\"*\" component={error} />\r\n                <Redirect to=\"/404\" />\r\n  \t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t<ColorSwitcher />\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t</IntlProvider>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n}\r\n\r\n// MainRoute.propTypes = {\r\n//   authUser: PropTypes.object.isRequired\r\n// };\r\n\r\n\r\nconst mapStateToProps = ({ settings, authUser }) => {\r\n\r\n  const { user } = authUser.isAuthenticated\r\n\tconst { locale } = settings;\r\n\treturn { /*user,*/locale, user };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(App);\r\n"]},"metadata":{},"sourceType":"module"}